@model BusinessLogicObject.UserRegisterModel

@{
    ViewBag.Title = "Index";
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="row">
        <div class="col-md-8 offset-md-4">
            <div class="">
                <h5>Register Here</h5>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.HiddenFor(m => m.id,new { Value = "0" }) 
            </div>
                <div class="form-group">
                    <h6>@Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label " })</h6>


                    <div class="col-md-10">
                        @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <h6> @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label " })</h6>

                    <div class="col-md-10">
                        @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label " })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <h6> @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label " })</h6>

                    <div class="col-md-10">
                        @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <h6> @Html.LabelFor(model => model.confirmPassword, htmlAttributes: new { @class = "control-label " })</h6>

                    <div class="col-md-10">
                        @Html.EditorFor(model => model.confirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.confirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10" style="padding-top:10px;">
                        <input type="submit" value="Create" class="btn btn-primary" id="btnsubmit" />
                        <h6>Sign in <span>@Html.ActionLink("Here", "Index", "Login")</span></h6>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<link href="~/Content/master.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.4.1.js"></script>
<script>
    $(document).ready(function () {

        alert("success");
        $("form").submit(function (e) {
            var valdata = $(this).serialize()
            alert(valdata)
            $.ajax({
                url: this.action,
                method: "post",
                dataType: 'json',
                data: valdata,
                success: function (data) {
                    alert(data.data)
                }
            })
            e.preventDefault()
        })
    })
</script>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
